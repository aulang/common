import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '3.1.4' apply false
    id 'io.spring.dependency-management' version '1.1.3' apply false
    id 'com.google.cloud.tools.jib' version '3.4.0' apply false
}

ext {
    set('springCloudVersion', '2022.0.4')
    javaProjects = subprojects.findAll { it.childProjects.isEmpty() }
}

allprojects {
    group = 'cn.aulang.common'
    version = '1.0.0'

    layout.buildDirectory = "$rootDir/build/" + outputDir(project)

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom 'org.junit:junit-bom:5.10.0'
            mavenBom SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }

        dependencies {
            dependencySet(group: 'org.slf4j', version: '2.0.9') {
                entry 'slf4j-api'
                entry 'jcl-over-slf4j'
            }

            dependencySet(group: 'com.fasterxml.jackson.core', version: '2.15.2') {
                entry 'jackson-core'
                entry 'jackson-databind'
                entry 'jackson-annotations'
            }

            dependency 'org.apache.commons:commons-lang3:3.13.0'
            dependency 'commons-beanutils:commons-beanutils:1.9.4'

            dependency 'org.projectlombok:lombok:1.18.30'

            dependency 'tk.mybatis-jakarta:mapper-spring-boot-starter:1.0.0'

            dependency 'jakarta.annotation:jakarta.annotation-api:2.1.1'

            dependency 'com.github.ben-manes.caffeine:caffeine:3.1.8'
            dependency 'org.redisson:redisson-spring-boot-starter:3.23.5'
        }
    }

    repositories {
        repositories {
            maven {
                url 'https://maven.aliyun.com/repository/public'
            }
            maven {
                url "$maven_registry_release_url"
                credentials {
                    username "$maven_registry_username"
                    password "$maven_registry_password"
                }
            }
            maven {
                url "$maven_registry_snapshot_url"
                credentials {
                    username "$maven_registry_username"
                    password "$maven_registry_password"
                }
            }
        }
        mavenLocal()
        mavenCentral()
    }

    configurations.configureEach {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }
    }
}

configure(javaProjects) { project ->
    apply plugin: 'java'
    apply plugin: 'cn.aulang.common.build.optional-dependencies'

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    ext {
        artifactId = name
    }

    test {
        useJUnitPlatform()
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
}

static def outputDir(Project project) {
    String parentPath = project == project.rootProject || project.parent == project.rootProject ? '' : project.parent.name + '/'
    project.parent == null ? project.name : parentPath + project.name
}